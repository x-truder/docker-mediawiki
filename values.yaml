# Default values for mediawiki.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: xtruder/mediawiki
  tag: 1.34.0-wmf.5
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

# url:
siteName: Company internal Wiki
mediawikiUser: admin
# mediawikiPassword: password

externalDatabase:
  type: mysql
  host: mysql
  port: 3306
  name: mediawiki
  user: mediawiki

customConfig: |
  $wgEnableUploads = true;

  // VisualEditor
  wfLoadExtension('VisualEditor');
  $wgDefaultUserOptions['visualeditor-enable'] = 1; // Enable by default for everybody
  $wgVirtualRestConfig['modules']['parsoid']['forwardCookies'] = true;
  $wgVirtualRestConfig['modules']['parsoid']['url'] = "http://localhost:8000";
  $wgVirtualRestConfig['modules']['parsoid']['domain'] = "localhost";
  $wgSessionsInObjectCache = true;

  // Wikidata
  $wgEnableWikibaseRepo = true;
  $wgEnableWikibaseClient = true;
  $wmgUseWikibaseRepo = true;
  require_once "$IP/extensions/Wikibase/repo/Wikibase.php";
  require_once "$IP/extensions/Wikibase/repo/ExampleSettings.php";
  //require_once "$IP/extensions/WikibaseImport/WikibaseImport.php";
  $wgWBRepoSettings['formatterUrlProperty'] = 'P2';

  // Scribunto
  wfLoadExtension('Scribunto');
  $wgScribuntoDefaultEngine = 'luastandalone';
  $wgScribuntoUseGeSHi = true;
  $wgScribuntoUseCodeEditor = true;

  // Code editor
  wfLoadExtension('CodeEditor');

  // SyntaxHighlight
  wfLoadExtension('SyntaxHighlight_GeSHi');

  // Wiki editor
  wfLoadExtension( 'WikiEditor'  );
  $wgDefaultUserOptions['usebetatoolbar'] = 1;
  $wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
  $wgDefaultUserOptions['wikieditor-preview'] = 1;

  // Parser functions
  wfLoadExtension('ParserFunctions');
  $wgPFEnableStringFunctions = true;

  // MobileFrontend
  wfLoadExtension('MobileFrontend');
  $wgMFAutodetectMobileView = true;

  // Linked wiki
  wfLoadExtension('LinkedWiki');
  $wgLinkedWikiConfigDefaultEndpoint="https://query.wikidata.org/bigdata/namespace/wdq/sparql";

  // Gadgets
  wfLoadExtension('Gadgets');

  // Elasticsearch
  wfLoadExtension('Elastica');
  require_once "$IP/extensions/CirrusSearch/CirrusSearch.php";
  $wgCirrusSearchServers = array( 'elasticsearch-master' );
  $wgSearchType = 'CirrusSearch';
  $wgCirrusSearchUseCompletionSuggester = 'yes';

  // Semantic media wiki
  /*enableSemantics('wiki.x-truder.net');
  $smwgDefaultStore = 'SMWSparqlStore';
  $smwgSparqlDatabaseConnector = 'blazegraph';
  $smwgSparqlQueryEndpoint = 'http://wikibase-query-service:8000/bigdata/namespace/kb/sparql';
  $smwgSparqlUpdateEndpoint = 'http://wikibase-query-service:8000/bigdata/namespace/kb/sparql';
  $smwgSparqlDataEndpoint = ''';*/

  // Disable reading by anonymous users
  $wgGroupPermissions['*']['read'] = false;

  // But allow them to access the login page or else there will be no way to log in!
  // [You also might want to add access to "Main Page", "Help:Contents", etc.)
  $wgWhitelistRead = array ("Special:Userlogin", "Main Page");

  // Disable anonymous editing
  $wgGroupPermissions['*']['edit'] = false;

  // Prevent new user registrations except by sysops
  $wgGroupPermissions['*']['createaccount'] = false;
  $wgGroupPermissions['sysop']['createaccount'] = true;

  // Dot not capitalize page titles
  $wgCapitalLinks = false;

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

parsoid:
  image:
    repository: thenets/parsoid
    tag: latest
    pullPolicy: Always

mariadb:
  enabled: true
  replication:
    enabled: false
  persistence:
    enabled: true
    accessModes: ["ReadWriteOnce"]
    size: 8Gi
  rootUser:
    password: mediawiki
  db:
    name: mediawiki
    user: mediawiki
    password: mediawiki

elasticsearch:
  enabled: true
  image: xtruder/mediawiki-elasticsearch
  imageTag: "6.5.4"
  esMajorVersion: 6
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 30Gi
