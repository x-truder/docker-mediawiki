apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "mediawiki.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mediawiki.name" . }}
    helm.sh/chart: {{ include "mediawiki.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mediawiki.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mediawiki.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 33
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: MEDIAWIKI_SITE_SERVER
              value: {{ .Values.url | quote }}
            - name: MEDIAWIKI_SITE_NAME
              value: {{ .Values.siteName | quote }}
            - name: MEDIAWIKI_ADMIN_USER
              value: {{ .Values.mediawikiUser | quote }}
            - name: MEDIAWIKI_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "mediawiki.fullname" . }}
                  key: mediawiki-password
            - name: MEDIAWIKI_DB_NAME
            {{- if .Values.mariadb.enabled }}
              value: {{ .Values.mariadb.db.name | quote }}
            {{- else }}
              value: {{ .Values.externalDatabase.name | quote }}
            {{- end }}
            - name: MEDIAWIKI_DB_TYPE
            {{- if .Values.mariadb.enabled }}
              value: mysql
            {{- else }}
              value: {{ .Values.externalDatabase.type | quote }}
            {{- end }}
            - name: MEDIAWIKI_DB_HOST
            {{- if .Values.mariadb.enabled }}
              value: {{ template "mediawiki.mariadb.fullname" .  }}
            {{- else }}
              value: {{ .Values.externalDatabase.host | quote }}
            {{- end }}
            - name: MEDIAWIKI_DB_PORT
            {{- if .Values.mariadb.enabled }}
              value: "3306"
            {{- else }}
              value: {{ .Values.externalDatabase.port | quote }}
            {{- end }}
            - name: MEDIAWIKI_DB_USER
            {{- if .Values.mariadb.enabled }}
              value: {{ .Values.mariadb.db.user | quote }}
            {{- else }}
              value: {{ .Values.externalDatabase.user | quote }}
            {{- end }}
            - name: MEDIAWIKI_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.mariadb.enabled }}
                  name: {{ template "mediawiki.mariadb.fullname" . }}
                  key: mariadb-password
                {{- else }}
                  name: {{ printf "%s-%s" .Release.Name "externaldb" }}
                  key: db-password
                {{- end }}
            - name: MEDIAWIKI_UPDATE
              value: "true"
          readinessProbe:
            httpGet:
              path: /index.php/Main_Page
              port: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: parsoid
          image: "{{ .Values.parsoid.image.repository }}:{{ .Values.parsoid.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PARSOID_DOMAIN_localhost
              value: http://localhost/api.php
      volumes:
        - name: config
          configMap:
            name: {{ template "mediawiki.fullname" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
